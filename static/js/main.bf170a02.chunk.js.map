{"version":3,"sources":["components/Github.js","components/Linkedin.js","components/Work.js","components/Resume.js","Table.js","components/NavBar.js","components/WorkPage.js","App.js","serviceWorker.js","index.js"],"names":["GitHub","props","state","color","isHover","size","colorChange","bind","sizeChange","curColor","this","setState","onMouseEnter","onMouseLeave","onMouseOver","changeBack","href","target","style","React","Component","LinkedIn","id","Resume","fontSize","Table","handleColor","parentMethod","backColor","work","githubColor","linkedinColor","workColor","resumeColor","console","log","in","className","Github","NavBar","WorkPage","working","App","handleWork","e","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf170a02.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Github } from '@icons-pack/react-simple-icons';\r\n// import '../App.css'\r\n\r\n\r\nclass GitHub extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            color : \"#cd5c5c\",\r\n            isHover: false,\r\n            size : 84\r\n        }\r\n        this.colorChange = this.colorChange.bind(this);\r\n        this.sizeChange = this.sizeChange.bind(this);\r\n        // this.changeBack = this.changeBack.bind(this);\r\n    }\r\n\r\n\r\n    colorChange(){\r\n        // this.changeBack();\r\n        let curColor;\r\n        if(this.state.isHover){\r\n            // curColor = \"#000000\" \r\n            curColor = \"#cd5c5c\"\r\n            this.setState((state,props) => ({\r\n                color: curColor,\r\n                isHover: false\r\n            }));\r\n        }else{\r\n            //curColor = \"#cd5c5c\"\r\n            curColor = \"#181717\"\r\n            this.setState((state,props) => ({\r\n                color: curColor,\r\n                isHover: true\r\n            }));\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    sizeChange(){\r\n\r\n\r\n    }\r\n    \r\n\r\n    \r\n    render(){\r\n        return(\r\n            <div onMouseEnter={this.colorChange } onMouseLeave={this.colorChange} onMouseOver={this.changeBack}>\r\n                <a href =  \"https://github.com/yalnader\" target=\"_blank\">\r\n                    <div>\r\n                        <Github  size={this.state.size} color={this.state.color} />\r\n                    </div>\r\n                    <span style={{color: this.state.color}}>Github</span>\r\n                </a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default GitHub;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Linkedin } from '@icons-pack/react-simple-icons';\r\n\r\nclass LinkedIn extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            color : \"#cd5c5c\",\r\n            isHover: false,\r\n            size : 84\r\n        }\r\n        this.colorChange = this.colorChange.bind(this);\r\n    }\r\n\r\n    colorChange(){\r\n        let curColor;\r\n        if(this.state.isHover){\r\n            // curColor = \"#000000\" \r\n            curColor = \"#cd5c5c\"\r\n            this.setState((state,props) => ({\r\n                color: curColor,\r\n                isHover: false\r\n            }));\r\n        }else{\r\n            //curColor = \"#cd5c5c\"\r\n            curColor = \"#0077B5\"\r\n            this.setState((state,props) => ({\r\n                color: curColor,\r\n                isHover: true\r\n            }));\r\n        }\r\n        \r\n    }\r\n    render(){\r\n        return(\r\n            <div onMouseEnter={this.colorChange} onMouseLeave={this.colorChange}>\r\n                <a href=\"https://www.linkedin.com/in/yalnader/\" target=\"_blank\">\r\n                    <div>\r\n                        <Linkedin id=\"linkedin\"  size={this.state.size} color = {this.state.color}/>\r\n                    </div>\r\n                    <span style={{color: this.state.color}}>LinkedIn</span>\r\n                </a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default LinkedIn;\r\n\r\n","import React from 'react';\r\nimport  Breifcase  from 'react-ionicons/lib/MdBriefcase';\r\n\r\nclass Work extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            color : \"#cd5c5c\",\r\n            isHover: false,\r\n            size : 84\r\n        }\r\n        this.colorChange = this.colorChange.bind(this);\r\n    }\r\n    \r\n    colorChange(){\r\n        let curColor;\r\n        if(this.state.isHover){\r\n            // curColor = \"#000000\" \r\n            curColor = \"#cd5c5c\"\r\n            this.setState((state,props) => ({\r\n                color: curColor,\r\n                isHover: false\r\n            }));\r\n        }else{\r\n            //curColor = \"#cd5c5c\"\r\n            curColor = \"#2EC866\"\r\n            this.setState((state,props) => ({\r\n                color: curColor,\r\n                isHover: true\r\n            }));\r\n        }\r\n        \r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div onMouseEnter={this.colorChange} onMouseLeave={this.colorChange} >    \r\n                <a href = \"#\" >\r\n                    <div >\r\n                        <Breifcase color= {this.state.color} fontSize = {this.state.size} />\r\n                    </div>\r\n                    <span style={{color: this.state.color}}>Work</span>\r\n                </a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Work;\r\n\r\n// onClick = {this.props.handlerWork}","import React from 'react';\r\nimport Document from 'react-ionicons/lib/MdDocument'\r\n\r\nclass Resume extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            color : \"#cd5c5c\",\r\n            isHover: false,\r\n            size : 84\r\n        }\r\n        this.colorChange = this.colorChange.bind(this);\r\n    }\r\n    \r\n    colorChange(){\r\n        let curColor;\r\n        if(this.state.isHover){\r\n            curColor = \"#cd5c5c\"\r\n            this.setState((state,props) => ({\r\n                color: curColor,\r\n                isHover: false\r\n            }));\r\n        }else{\r\n            curColor = '#BA2EC7'\r\n            this.setState((state,props) => ({\r\n                color: curColor, \r\n                isHover: true\r\n            }));\r\n        }\r\n        \r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div onMouseEnter={this.colorChange} onMouseLeave={this.colorChange}>\r\n                <a href = \"#\" target=\"_blank\">\r\n                    <div>\r\n                        <Document color= {this.state.color} fontSize={this.state.size}/>\r\n                    </div>\r\n                    <span style={{color: this.state.color}}>Resume</span>\r\n                </a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Resume;\r\n\r\n","import React from 'react';\r\nimport './Table.css'\r\nimport { ReactJs } from '@icons-pack/react-simple-icons';\r\nimport Github from './components/Github';\r\nimport LinkedIn from './components/Linkedin';\r\nimport Work  from './components/Work';\r\nimport Resume  from './components/Resume';\r\nimport { Fade } from 'react-animation-components'\r\n\r\nclass Table extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            work : false,\r\n            backColor: 'App'\r\n        }\r\n        this.githubColor = this.githubColor.bind(this)\r\n        this.linkedinColor =this.linkedinColor.bind(this);\r\n        this.workColor =this.workColor.bind(this);\r\n        this.resumeColor =this.resumeColor.bind(this);\r\n\r\n    }\r\n\r\n    githubColor(){\r\n        console.log(\"github Color is wokring\");\r\n        this.setState((state,props) => ({\r\n            backColor: 'github'\r\n        }));\r\n        console.log(this.state.backColor);\r\n\r\n    }\r\n    linkedinColor(){\r\n        console.log(\"linkedin Color is wokring\");\r\n        this.setState((state,props) => ({\r\n            backColor: 'linkedin'\r\n        }));\r\n        console.log(this.state.backColor);\r\n\r\n    }\r\n    resumeColor(){\r\n        console.log(\"resume Color is wokring\");\r\n        this.setState((state,props) => ({\r\n            backColor: 'resume'\r\n        }));\r\n        console.log(this.state.backColor);\r\n\r\n    }\r\n    workColor(){\r\n        console.log(\"work Color is wokring\");\r\n        this.setState((state,props) => ({\r\n            backColor: 'work'\r\n        }));\r\n        console.log(this.state.backColor);\r\n\r\n    }\r\n\r\n    handleColor = ()=>{\r\n        this.props.parentMethod(this.state.backColor);\r\n    }\r\n\r\n    render(){\r\n       return(\r\n            <Fade in>\r\n                <div className=\"topPart\">\r\n                    <h1>Helllo User</h1>\r\n                    <h3>I'm Yasser Alnader, a Software Engineering student at the University of Ottawa</h3>\r\n                </div>\r\n                <table onMouseOver ={this.handleColor}>\r\n                    <thead>\r\n\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        <td >\r\n                            <tr className=\"topRow\" onMouseEnter={this.githubColor}>\r\n                                <Github />\r\n                            </tr>\r\n                            <tr onMouseEnter={this.linkedinColor}>\r\n                                <LinkedIn/>\r\n                            </tr>\r\n                            <tr onMouseEnter={this.resumeColor}>\r\n                                <Resume/>\r\n                            </tr>\r\n                        </td>\r\n                        <td>\r\n                            {/* <tr className=\"topRow\" onMouseEnter={this.workColor}>\r\n                                <Work />\r\n                            </tr> */}\r\n                            {/* <tr onMouseEnter={this.resumeColor}>\r\n                                <Resume/>\r\n                            </tr> */}\r\n                        </td>\r\n\r\n                    </tbody>\r\n                </table>\r\n            </Fade>\r\n\r\n       ) \r\n    }\r\n\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\nimport \"./NavBar.css\";\r\nimport Github from './Github.js';\r\n\r\nclass NavBar extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"bar\">\r\n\r\n                <ul>\r\n\r\n                    <li><Github/></li>\r\n\r\n                </ul>\r\n\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport \"./WorkPage.css\";\r\nimport NavBar from './NavBar';\r\n\r\n\r\nclass WorkPage extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            working : false\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className = \"main\">\r\n\r\n                <h1>Test</h1>\r\n                <NavBar/>\r\n\r\n\r\n            </div>   \r\n\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default WorkPage;","import React from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport Table from './Table.js';\r\nimport WorkPage from './components/WorkPage.js';\r\n\r\nclass App extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      backColor : \"App\"\r\n    }\r\n    this.handleWork = this.handleWork.bind(this);\r\n    this.handleColor = this.handleColor.bind(this);\r\n  \r\n  }\r\n\r\n  handleWork(){\r\n\r\n    this.setState({\r\n\r\n      work : true\r\n\r\n    })\r\n    console.log(\"The state has been set to true\")\r\n\r\n  }\r\n\r\n\r\n  handleColor(e){\r\n    this.setState((state, props) =>({\r\n      backColor: e\r\n    }));\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n          <div className=\"AppUpper\">\r\n\r\n            <h1>TEST</h1>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            \r\n\r\n          </div>\r\n          <div className={this.state.backColor}>\r\n            <div className=\"App-header\">\r\n              {this.state.work? <WorkPage/> : <Table parentMethod={this.handleColor}/>} \r\n            </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// import { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}